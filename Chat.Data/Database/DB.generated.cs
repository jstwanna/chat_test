//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace Chat.Data.Database
{
	/// <summary>
	/// Database       : chat
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 15.0
	/// </summary>
	public partial class DBContext : LinqToDB.Data.DataConnection
	{
		public ITable<Migration> Migrations { get { return this.GetTable<Migration>(); } }
		public ITable<Role>      Roles      { get { return this.GetTable<Role>(); } }
		public ITable<Test>      Tests      { get { return this.GetTable<Test>(); } }
		public ITable<User>      Users      { get { return this.GetTable<User>(); } }

		partial void InitMappingSchema()
		{
		}

		public DBContext()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(DataOptions<DBContext> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="public", Name="migrations")]
	public partial class Migration
	{
		[Column("schemaversionsid"), PrimaryKey, Identity] public int      Schemaversionsid { get; set; } // integer
		[Column("scriptname"),       NotNull             ] public string   Scriptname       { get; set; } // character varying(255)
		[Column("applied"),          NotNull             ] public DateTime Applied          { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="roles")]
	public partial class Role
	{
		[Column("id"),         PrimaryKey, Identity] public int    Id         { get; set; } // integer
		[Column("name"),       NotNull             ] public string Name       { get; set; } // text
		[Column("constraint"), NotNull             ] public string Constraint { get; set; } // text

		#region Associations

		/// <summary>
		/// user_role_fk_BackReference (public.users)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="Id", CanBeNull=true)]
		public User Userrolefk { get; set; }

		#endregion
	}

	[Table(Schema="public", Name="test")]
	public partial class Test
	{
		[Column("id"), Identity] public int Id { get; set; } // integer
	}

	[Table(Schema="public", Name="users")]
	public partial class User
	{
		[Column("id"),            PrimaryKey,  Identity] public int       Id           { get; set; } // integer
		[Column("name"),          NotNull              ] public string    Name         { get; set; } // text
		[Column("surname"),       NotNull              ] public string    Surname      { get; set; } // text
		[Column("mail"),          NotNull              ] public string    Mail         { get; set; } // text
		[Column("password_salt"), NotNull              ] public string    PasswordSalt { get; set; } // text
		[Column("password_hash"), NotNull              ] public string    PasswordHash { get; set; } // text
		[Column("reg_date"),      NotNull              ] public DateTime  RegDate      { get; set; } // timestamp (6) without time zone
		[Column("role"),          NotNull              ] public int       Role         { get; set; } // integer
		[Column("disabled"),      NotNull              ] public bool      Disabled     { get; set; } // boolean
		[Column("disabled_date"),    Nullable          ] public DateTime? DisabledDate { get; set; } // timestamp (6) without time zone

		#region Associations

		/// <summary>
		/// user_role_fk (public.roles)
		/// </summary>
		[Association(ThisKey="Id", OtherKey="Id", CanBeNull=false)]
		public Role FKRole { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Migration Find(this ITable<Migration> table, int Schemaversionsid)
		{
			return table.FirstOrDefault(t =>
				t.Schemaversionsid == Schemaversionsid);
		}

		public static Role Find(this ITable<Role> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}

		public static User Find(this ITable<User> table, int Id)
		{
			return table.FirstOrDefault(t =>
				t.Id == Id);
		}
	}
}
