//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1573, 1591

using System;
using System.Linq;

using LinqToDB;
using LinqToDB.Configuration;
using LinqToDB.Mapping;

namespace Chat.Data.Database
{
	/// <summary>
	/// Database       : chat
	/// Data Source    : tcp://localhost:5432
	/// Server Version : 15.0
	/// </summary>
	public partial class DBContext : LinqToDB.Data.DataConnection
	{
		public ITable<Migration> Migrations { get { return this.GetTable<Migration>(); } }
		public ITable<Test>      Tests      { get { return this.GetTable<Test>(); } }

		partial void InitMappingSchema()
		{
		}

		public DBContext()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(DataOptions options)
			: base(options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		public DBContext(DataOptions<DBContext> options)
			: base(options.Options)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table(Schema="public", Name="migrations")]
	public partial class Migration
	{
		[Column("schemaversionsid"), PrimaryKey, Identity] public int      Schemaversionsid { get; set; } // integer
		[Column("scriptname"),       NotNull             ] public string   Scriptname       { get; set; } // character varying(255)
		[Column("applied"),          NotNull             ] public DateTime Applied          { get; set; } // timestamp (6) without time zone
	}

	[Table(Schema="public", Name="test")]
	public partial class Test
	{
		[Column("id"), Identity] public int Id { get; set; } // integer
	}

	public static partial class TableExtensions
	{
		public static Migration Find(this ITable<Migration> table, int Schemaversionsid)
		{
			return table.FirstOrDefault(t =>
				t.Schemaversionsid == Schemaversionsid);
		}
	}
}
